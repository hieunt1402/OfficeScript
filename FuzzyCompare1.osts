{"version":"0.2.0","body":"function main(workbook: ExcelScript.Workbook, str1: string, str2: string){\n    // Convert the strings to lowercase for case-insensitive comparison\n    let lowercaseStr1: string = str1.toLowerCase();\n    let lowercaseStr2: string = str2.toLowerCase();\n\n    lowercaseStr1 = removeDiacritics(lowercaseStr1);\n    lowercaseStr2 = removeDiacritics(lowercaseStr2);\n\n    // Calculate the Levenshtein distance between the two strings\n    let distance: number = calculateLevenshteinDistance(lowercaseStr1, lowercaseStr2);\n\n    // Calculate the similarity score as a percentage\n    let similarityScore: number = (1 - distance / Math.max(lowercaseStr1.length, lowercaseStr2.length)) * 100;\n\n    // Return the similarity score\n    return similarityScore;\n}\n\n// Function to calculate the Levenshtein distance between two strings\nfunction calculateLevenshteinDistance(str1: string, str2: string): number {\n    let matrix: number[][] = [];\n\n    // Initialize the matrix\n    for (let i = 0; i <= str1.length; i++) {\n        matrix[i] = [i];\n    }\n    for (let j = 0; j <= str2.length; j++) {\n        matrix[0][j] = j;\n    }\n\n    // Calculate the minimum number of operations required to transform str1 into str2\n    for (let i = 1; i <= str1.length; i++) {\n        for (let j = 1; j <= str2.length; j++) {\n            let cost: number = (str1.charAt(i - 1) === str2.charAt(j - 1)) ? 0 : 1;\n            matrix[i][j] = Math.min(\n                matrix[i - 1][j] + 1, // Deletion\n                matrix[i][j - 1] + 1, // Insertion\n                matrix[i - 1][j - 1] + cost // Substitution\n            );\n        }\n    }\n\n    // Return the Levenshtein distance\n    return matrix[str1.length][str2.length];\n}\nfunction removeDiacritics(str: string): string {\n    return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").replace(/[đĐ]/g, (m) => (m === 'đ' ? 'd' : 'D'));\n}","description":"","parameterInfo":"{\"version\":1,\"originalParameterOrder\":[{\"name\":\"str1\",\"index\":0},{\"name\":\"str2\",\"index\":1}],\"parameterSchema\":{\"type\":\"object\",\"required\":[\"str1\",\"str2\"],\"properties\":{\"str1\":{\"type\":\"string\"},\"str2\":{\"type\":\"string\"}}},\"returnSchema\":{\"type\":\"object\",\"properties\":{\"result\":{\"type\":\"number\"}}},\"signature\":{\"comment\":\"\",\"parameters\":[{\"name\":\"workbook\",\"comment\":\"\"},{\"name\":\"str1\",\"comment\":\"\"},{\"name\":\"str2\",\"comment\":\"\"}]}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}